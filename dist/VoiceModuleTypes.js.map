{"version":3,"file":"VoiceModuleTypes.js","sourceRoot":"","sources":["../src/VoiceModuleTypes.ts"],"names":[],"mappings":"","sourcesContent":["export type SpeechEvents = {\n  onSpeechStart?: (e: SpeechStartEvent) => void;\n  onSpeechRecognized?: (e: SpeechRecognizedEvent) => void;\n  onSpeechEnd?: (e: SpeechEndEvent) => void;\n  onSpeechError?: (e: SpeechErrorEvent) => void;\n  onSpeechResults?: (e: SpeechResultsEvent) => void;\n  onSpeechPartialResults?: (e: SpeechResultsEvent) => void;\n  onSpeechVolumeChanged?: (e: SpeechVolumeChangeEvent) => void;\n};\n\nexport type TranscriptionEvents = {\n  onTranscriptionStart?: (e: TranscriptionStartEvent) => void;\n  onTranscriptionEnd?: (e: TranscriptionEndEvent) => void;\n  onTranscriptionError?: (e: TranscriptionErrorEvent) => void;\n  onTranscriptionResults?: (e: TranscriptionResultsEvent) => void;\n};\n\nexport type SpeechStartEvent = {\n  error?: boolean;\n};\n\nexport type TranscriptionStartEvent = {\n  error?: boolean;\n};\n\nexport type SpeechRecognizedEvent = {\n  isFinal?: boolean;\n};\n\nexport type SpeechResultsEvent = {\n  value?: string[];\n};\n\nexport type TranscriptionResultsEvent = {\n  segments?: string[];\n  transcription?: string;\n  isFinal?: boolean;\n};\n\nexport type SpeechErrorEvent = {\n  error?: {\n    code?: string;\n    message?: string;\n  };\n};\n\nexport type TranscriptionErrorEvent = {\n  error?: {\n    code?: string;\n    message?: string;\n  };\n};\n\nexport type SpeechEndEvent = {\n  error?: boolean;\n};\n\nexport type TranscriptionEndEvent = {\n  error?: boolean;\n};\n\nexport type SpeechVolumeChangeEvent = {\n  value?: number;\n};\n"]}
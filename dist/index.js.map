{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  NativeModules,\n  NativeEventEmitter,\n  Platform,\n  type EventSubscription,\n} from 'react-native';\nimport invariant from 'invariant';\nimport {\n  type SpeechEvents,\n  type TranscriptionEvents,\n  type TranscriptionEndEvent,\n  type TranscriptionErrorEvent,\n  type TranscriptionStartEvent,\n  type SpeechRecognizedEvent,\n  type SpeechErrorEvent,\n  type SpeechResultsEvent,\n  type SpeechStartEvent,\n  type SpeechEndEvent,\n  type SpeechVolumeChangeEvent,\n  type TranscriptionResultsEvent,\n} from './VoiceModuleTypes';\n\nconst LINKING_ERROR =\n  `The package '@react-native-voice/voice' doesn't seem to be linked. Make sure: \\n\\n` +\n  Platform.select({ ios: \"- You have run 'pod install'\\n\", default: '' }) +\n  '- You rebuilt the app after installing the package\\n' +\n  '- You are not using Expo Go\\n';\n\n//@ts-expect-error\nconst isTurboModuleEnabled = global.__turboModuleProxy != null;\n\nconst VoiceNativeModule = isTurboModuleEnabled\n  ? Platform.OS === 'android'\n    ? require('./NativeVoiceAndroid').default\n    : require('./NativeVoiceIOS').default\n  : NativeModules.Voice;\n\nconst Voice = VoiceNativeModule\n  ? VoiceNativeModule\n  : new Proxy(\n      {},\n      {\n        get() {\n          throw new Error(LINKING_ERROR);\n        },\n      },\n    );\n\n// NativeEventEmitter is only availabe on React Native platforms, so this conditional is used to avoid import conflicts in the browser/server\nconst voiceEmitter =\n  Platform.OS !== 'web' ? new NativeEventEmitter(Voice) : null;\ntype SpeechEvent = keyof SpeechEvents;\ntype TranscriptionEvent = keyof TranscriptionEvents;\n\nclass RCTVoice {\n  private _loaded: boolean;\n  private _listeners: EventSubscription[];\n  private _events: Required<SpeechEvents> & Required<TranscriptionEvents>;\n\n  constructor() {\n    this._loaded = false;\n    this._listeners = JSON.parse(JSON.stringify([]));\n    this._events = {\n      onSpeechStart: () => {},\n      onSpeechRecognized: () => {},\n      onSpeechEnd: () => {},\n      onSpeechError: () => {},\n      onSpeechResults: () => {},\n      onSpeechPartialResults: () => {},\n      onSpeechVolumeChanged: () => {},\n      onTranscriptionStart: () => {},\n      onTranscriptionEnd: () => {},\n      onTranscriptionError: () => {},\n      onTranscriptionResults: () => {},\n    };\n  }\n\n  removeAllListeners() {\n    if (this._listeners) {\n      this._listeners.forEach((listener) => {\n        if (listener?.remove) {\n          listener?.remove();\n        }\n      });\n\n      this._listeners = JSON.parse(JSON.stringify([]));\n    }\n  }\n\n  destroy() {\n    if (!this._loaded && !this._listeners) {\n      return Promise.resolve();\n    }\n    return new Promise<void>((resolve, reject) => {\n      Voice.destroySpeech((error: string) => {\n        if (error) {\n          reject(new Error(error));\n        } else {\n          this.removeAllListeners();\n          resolve();\n        }\n      });\n    });\n  }\n  destroyTranscription() {\n    if (!this._loaded && !this._listeners) {\n      return Promise.resolve();\n    }\n    return new Promise<void>((resolve, reject) => {\n      Voice.destroyTranscription((error: string) => {\n        if (error) {\n          reject(new Error(error));\n        } else {\n          if (this._listeners?.length > 0) {\n            this._listeners.forEach((listener) => listener.remove());\n            this._listeners = JSON.parse(JSON.stringify([]));\n          }\n          resolve();\n        }\n      });\n    });\n  }\n\n  start(locale: string, options = {}) {\n    if (\n      !this._loaded &&\n      this._listeners.length === 0 &&\n      voiceEmitter !== null\n    ) {\n      this._listeners = (Object.keys(this._events) as SpeechEvent[]).map(\n        (key: SpeechEvent) => voiceEmitter.addListener(key, this._events[key]),\n      );\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      const callback = (error: string) => {\n        if (error) {\n          reject(new Error(error));\n        } else {\n          resolve();\n        }\n      };\n      if (Platform.OS === 'android') {\n        Voice.startSpeech(\n          locale,\n          Object.assign(\n            {\n              EXTRA_LANGUAGE_MODEL: 'LANGUAGE_MODEL_FREE_FORM',\n              EXTRA_MAX_RESULTS: 5,\n              EXTRA_PARTIAL_RESULTS: true,\n              REQUEST_PERMISSIONS_AUTO: true,\n            },\n            options,\n          ),\n          callback,\n        );\n      } else {\n        Voice.startSpeech(locale, callback);\n      }\n    });\n  }\n  startTranscription(url: string, locale: string, options = {}) {\n    if (!this._loaded && !this._listeners && voiceEmitter !== null) {\n      this._listeners = (Object.keys(this._events) as TranscriptionEvent[]).map(\n        (key: TranscriptionEvent) =>\n          voiceEmitter.addListener(key, this._events[key]),\n      );\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      const callback = (error: string) => {\n        if (error) {\n          reject(new Error(error));\n        } else {\n          resolve();\n        }\n      };\n      if (Platform.OS === 'android') {\n        Voice.startTranscription(\n          url,\n          locale,\n          Object.assign(\n            {\n              EXTRA_LANGUAGE_MODEL: 'LANGUAGE_MODEL_FREE_FORM',\n              EXTRA_MAX_RESULTS: 5,\n              EXTRA_PARTIAL_RESULTS: true,\n              REQUEST_PERMISSIONS_AUTO: true,\n            },\n            options,\n          ),\n          callback,\n        );\n      } else {\n        Voice.startTranscription(url, locale, callback);\n      }\n    });\n  }\n  stop() {\n    if (!this._loaded && !this._listeners) {\n      return Promise.resolve();\n    }\n    return new Promise<void>((resolve, reject) => {\n      Voice.stopSpeech((error?: string) => {\n        if (error) {\n          reject(new Error(error));\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n  stopTranscription() {\n    if (!this._loaded && !this._listeners) {\n      return Promise.resolve();\n    }\n    return new Promise<void>((resolve, reject) => {\n      Voice.stopTranscription((error?: string) => {\n        if (error) {\n          reject(new Error(error));\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n  cancel() {\n    if (!this._loaded && !this._listeners) {\n      return Promise.resolve();\n    }\n    return new Promise<void>((resolve, reject) => {\n      Voice.cancelSpeech((error?: string) => {\n        if (error) {\n          reject(new Error(error));\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n  cancelTranscription() {\n    if (!this._loaded && !this._listeners) {\n      return Promise.resolve();\n    }\n    return new Promise<void>((resolve, reject) => {\n      Voice.cancelSpeech((error?: string) => {\n        if (error) {\n          reject(new Error(error));\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n  isAvailable(): Promise<0 | 1> {\n    return new Promise((resolve, reject) => {\n      Voice.isSpeechAvailable((isAvailable: 0 | 1, error: string) => {\n        if (error) {\n          reject(new Error(error));\n        } else {\n          resolve(isAvailable);\n        }\n      });\n    });\n  }\n\n  /**\n   * (Android) Get a list of the speech recognition engines available on the device\n   * */\n  getSpeechRecognitionServices() {\n    if (Platform.OS !== 'android') {\n      invariant(\n        Voice,\n        'Speech recognition services can be queried for only on Android',\n      );\n      return;\n    }\n\n    return Voice.getSpeechRecognitionServices();\n  }\n\n  isRecognizing(): Promise<0 | 1> {\n    return new Promise((resolve) => {\n      Voice.isRecognizing((isRecognizing: 0 | 1) => resolve(isRecognizing));\n    });\n  }\n\n  set onSpeechStart(fn: (e: SpeechStartEvent) => void) {\n    this._events.onSpeechStart = fn;\n  }\n\n  set onTranscriptionStart(fn: (e: TranscriptionStartEvent) => void) {\n    this._events.onTranscriptionStart = fn;\n  }\n\n  set onSpeechRecognized(fn: (e: SpeechRecognizedEvent) => void) {\n    this._events.onSpeechRecognized = fn;\n  }\n\n  set onSpeechEnd(fn: (e: SpeechEndEvent) => void) {\n    this._events.onSpeechEnd = fn;\n  }\n\n  set onTranscriptionEnd(fn: (e: SpeechEndEvent) => void) {\n    this._events.onTranscriptionEnd = fn;\n  }\n  set onSpeechError(fn: (e: SpeechErrorEvent) => void) {\n    this._events.onSpeechError = fn;\n  }\n\n  set onTranscriptionError(fn: (e: TranscriptionErrorEvent) => void) {\n    this._events.onTranscriptionError = fn;\n  }\n\n  set onSpeechResults(fn: (e: SpeechResultsEvent) => void) {\n    this._events.onSpeechResults = fn;\n  }\n\n  set onTranscriptionResults(fn: (e: TranscriptionResultsEvent) => void) {\n    this._events.onTranscriptionResults = fn;\n  }\n\n  set onSpeechPartialResults(fn: (e: SpeechResultsEvent) => void) {\n    this._events.onSpeechPartialResults = fn;\n  }\n  set onSpeechVolumeChanged(fn: (e: SpeechVolumeChangeEvent) => void) {\n    this._events.onSpeechVolumeChanged = fn;\n  }\n}\n\nexport type {\n  SpeechEndEvent,\n  SpeechErrorEvent,\n  SpeechEvents,\n  SpeechStartEvent,\n  SpeechRecognizedEvent,\n  SpeechResultsEvent,\n  SpeechVolumeChangeEvent,\n  TranscriptionEndEvent,\n  TranscriptionErrorEvent,\n  TranscriptionEvents,\n  TranscriptionStartEvent,\n  TranscriptionResultsEvent,\n};\nexport default new RCTVoice();\n"]}